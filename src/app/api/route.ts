import { GoogleSpreadsheet } from 'google-spreadsheet';
import { NextResponse } from 'next/server';
import { readFileSync } from 'fs';
import path from 'path';
import { JWT } from 'google-auth-library';

// API route handler
export async function POST(req) {
  try {
    const body = await req.json();
    const { name, email, business, location } = body;

    // Path to the credentials JSON file (place the JSON file in a secured place)
    const SPREADSHEET_ID = process.env.NEXT_PUBLIC_SPREADSHEET_ID;
    const SHEET_ID = process.env.NEXT_PUBLIC_SHEET_ID;
    const CLIENT_EMAIL = process.env.NEXT_PUBLIC_GOOGLE_CLIENT_EMAIL;
    const PRIVATE_KEY = process.env.NEXT_PUBLIC_GOOGLE_SERVICE_PRIVATE_KEY as string
    
    console.log("aaa", SHEET_ID, "asasds", )
    const serviceAccountAuth = new JWT({
      // env var values here are copied from service account credentials generated by google
      // see "Authentication" section in docs for more info
      email: CLIENT_EMAIL,
      key: PRIVATE_KEY.replace(/\\n/g, '\n'),
      scopes: ['https://www.googleapis.com/auth/spreadsheets', 'https://www.googleapis.com/auth/drive.file'], 
    });
    
    const doc = new GoogleSpreadsheet(SPREADSHEET_ID, serviceAccountAuth);
    console.log("doc", doc)
    
     
    await doc.loadInfo(); // loads document properties and worksheets
    console.log(doc.title);
    
    const sheet = doc.sheetsByIndex[0]; // or use `doc.sheetsById[id]` or `doc.sheetsByTitle[title]`
    console.log(sheet.title);
    console.log(sheet.rowCount);
    
    
    
    await sheet.addRow({ "Column 1": name, "Column 2": location , "Column 3": email  , "Column 4": business});

    return NextResponse.json({ message: 'Row added successfully' });
  } catch (error) {
    console.error('Error adding row to Google Sheet:', error);
    return NextResponse.json({ message: 'Failed to add row' }, { status: 500 });
  }
}